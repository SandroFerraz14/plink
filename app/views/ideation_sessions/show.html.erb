<% if current_user.id==@ideation_session.user_id or 
	@participants.where(email: current_user.email, ideation_session_id: @ideation_session.id).exists? %>

    <% if @participants.where(email: current_user.email, ideation_session_id: @ideation_session.id).take.active == false %>
        <% @part = @participants.where(email: current_user.email, ideation_session_id: @ideation_session.id).take.update_attribute(:active, true) %>
        <% @part = @participants.where(email: current_user.email, ideation_session_id: @ideation_session.id).take.update_attribute(:user_id, current_user.id) %>

    <% else %>
    
	<% end %>
	<div id="countdown">
		<% if ((@ideation_session.end_time != nil) && (Time.new.to_i > Time.zone.parse(@ideation_session.end_time.to_s).to_i)) %>
			<span>The session is closed</span>
		<% elsif (@ideation_session.start_time != nil && Time.new.to_i < Time.zone.parse(@ideation_session.start_time.to_s).to_i) %>
			<span><%= @ideation_session.start_time.strftime("Start on %d %B %Y at %H:%M") %></span>
		<% else %>
			<span>The session is open</span>
		<% end %>
    </div>
	<p id="notice"><%= notice %></p>

	<%= render 'themes/partial_index' %>

	<% if current_user.id==@ideation_session.user_id %>
		<!--<%= render 'participants/partial_index' %>-->
		<!--<%= render 'participants/form' %>-->
	<% end %>
	<!--<%= link_to 'Edit', edit_ideation_session_path(@ideation_session) %> |-->
	<br>
	<!--<%= link_to 'Back', ideation_sessions_path %>|-->
<% else %>
	<p>
		Access denied.
	</p>
<% end %>	
<script type="text/javascript">
	var idIdeationSession = <%= @ideation_session.id %>;
	var updateStatusSession = function(status){
		$.ajax({
	      type: "GET",
	      url: "/ideation_sessions/set_availability",
	      data: {'id_ideation_session': idIdeationSession, 'availability' : status},
	      success: function(data){
	        console.log(data[0].message);
	      }
	    });
	}

	var updateStatusVotation = function(status){
		$.ajax({
	      type: "GET",
	      url: "/ideation_sessions/set_status_votation",
	      data: {'id_ideation_session': idIdeationSession, 'status' : status},
	      success: function(data){
	        console.log(data[0].message);
	      }
	    });
	}

	var startTime = <%= Time.zone.parse(@ideation_session.start_time.to_s).to_i %>;
	var endTime = <%= Time.zone.parse(@ideation_session.end_time.to_s).to_i %>;
	var dateStart = startTime * 1000;
	var dateFinish = endTime * 1000;
	if((new Date() <= dateFinish) && (new Date() > dateStart)){
		updateStatusSession(true);
		updateStatusVotation(false);
		var timerId =
		  countdown(
		    dateFinish,
		    function(ts) {
		      document.getElementById("countdown").innerHTML = "<span>The session ends on:</span><br>" + ts.toHTML("strong");
		      if(ts.days == 0 && ts.hours == 0 && ts.minutes == 0 && ts.seconds == 0)
		      {
		      	clearInterval(timerId);
		      	$("#countdown").html("");
		      	$("#countdown").append("<span>The session is closed</span>");
		      	updateStatusSession(false);
		      	updateStatusVotation(true);
		      }
		    },
		    countdown.DAYS|countdown.HOURS|countdown.MINUTES|countdown.SECONDS);
	}
</script>