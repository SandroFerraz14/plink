<% if (current_user.id==@ideation_session.user_id or 
	@participants.where(email: current_user.email, ideation_session_id: @ideation_session.id).exists?) || (@ideation_session.private_session==false)%>

	<% if (@ideation_session.private_session==false) && (@participants.where(email: current_user.email, ideation_session_id: @ideation_session.id).exists? == false)%>
		<% create_participant_outsider %>
	<% end %>

    <% if @participants.where(email: current_user.email, ideation_session_id: @ideation_session.id).take.active == false %>
        <% @part = @participants.where(email: current_user.email, ideation_session_id: @ideation_session.id).take.update_attribute(:active, true) %>
        <% @part = @participants.where(email: current_user.email, ideation_session_id: @ideation_session.id).take.update_attribute(:user_id, current_user.id) %>

    <% else %>
    
	<% end %>
	<div id="countdown" class="ibox-content text-center p-md">
		<% if ((@ideation_session.end_time != nil) && (Time.new.to_i > Time.zone.parse(@ideation_session.end_time.to_s).to_i)) %>
			<span>The session is closed</span>
		<% elsif (@ideation_session.start_time != nil && Time.new.to_i < Time.zone.parse(@ideation_session.start_time.to_s).to_i) %>
			<span><%= @ideation_session.start_time.strftime("Start on %d %B %Y at %H:%M") %></span>
		<% else %>
			<span>The session is open</span>
		<% end %>
	</div>

	<p id="notice"><%= notice %></p>

	<%= render 'themes/partial_index' %>
<% else %>
	<p>
		Access denied.
	</p>
<% end %>	

<script type="text/javascript">
	var idIdeationSession = <%= @ideation_session.id %>;
	var updateStatusSession = function(status){
		$.ajax({
	      type: "GET",
	      url: "/ideation_sessions/set_availability",
	      data: {'id_ideation_session': idIdeationSession, 'availability' : status},
	      success: function(data){
	        console.log(data[0].message);
	      }
	    });
	}

	var updateStatusVotation = function(status){
		$.ajax({
	      type: "GET",
	      url: "/ideation_sessions/set_status_votation",
	      data: {'id_ideation_session': idIdeationSession, 'status' : status},
	      success: function(data){
	        console.log(data[0].message);
	      }
	    });
	}

	var countdownVotation = function(){
		var timerVotationId =
		  countdown(
		    dateFinishVotation,
		    function(ts) {
		    	var days = (ts.days > 0) ? "<h2 class='inline'><span class='blue'>" + ts.days + "<small class='small-time'> days</small></span></h2>" : "";
		    	var hours = (ts.hours >= 0) ? "<h2 class='inline'><span class='blue'>" + ts.hours + "<small class='small-time'> hours</small></span></h2>" : "";
		    	var minutes = (ts.minutes >= 0) ? "<h2 class='inline'><span class='blue'>" + ts.minutes + "<small class='small-time'> minutes</small></span></h2>" : "";
		    	var seconds = (ts.seconds >= 0) ? "<h2 class='inline'><span class='blue'>" + ts.seconds + "<small class='small-time'> seconds</small></span></h2>" : "";
		    	var html = days + "" +  hours + "" + minutes + "" + seconds;
		      document.getElementById("countdown").innerHTML = "<h4>Votation phase of ideas ends on:</h4> " + html;
		      if(ts.days == 0 && ts.hours == 0 && ts.minutes == 0 && ts.seconds == 0)
		      {
		      	clearInterval(timerVotationId);
		      	$("#countdown").html("");
		      	$("#countdown").append("The session is closed");
		      	updateStatusVotation(false);
		      	$("#btn_votes").remove();
		      }
		    },
		    countdown.DAYS|countdown.HOURS|countdown.MINUTES|countdown.SECONDS);
	}

	var startTime = <%= Time.zone.parse(@ideation_session.start_time.to_s).to_i %>;
	var endTime = <%= Time.zone.parse(@ideation_session.end_time.to_s).to_i %>;
	var endTimeVotation = <%= Time.zone.parse(@ideation_session.end_time_votation.to_s).to_i %>;
	var dateStart = startTime * 1000;
	var dateFinish = endTime * 1000;
	var dateFinishVotation = endTimeVotation * 1000;
	if((new Date() <= dateFinish) && (new Date() > dateStart)){
		updateStatusSession(true);
		updateStatusVotation(false);
		var timerId =
		  countdown(
		    dateFinish,
		    function(ts) {
		    	var days = (ts.days > 0) ? "<h2 class='inline'><span class='green'>" + ts.days + "<small class='small-time'> days</small></span></h2>" : "";
		    	var hours = (ts.hours >= 0) ? "<h2 class='inline'><span class='green'>" + ts.hours + "<small class='small-time'> hours</small></span></h2>" : "";
		    	var minutes = (ts.minutes >= 0) ? "<h2 class='inline'><span class='green'>" + ts.minutes + "<small class='small-time'> minutes</small></span></h2>" : "";
		    	var seconds = (ts.seconds >= 0) ? "<h2 class='inline'><span class='green'>" + ts.seconds + "<small class='small-time'> seconds</small></span></h2>" : "";
		    	var html = days + "" +  hours + "" + minutes + "" + seconds;
		      document.getElementById("countdown").innerHTML = "<h4>Launch phase of ideas ends on:</h4> " + html;
		      if(ts.days == 0 && ts.hours == 0 && ts.minutes == 0 && ts.seconds == 0)
		      {
		      	clearInterval(timerId);
		      	$("#countdown").html("");
		      	$("#countdown").append("The launch phase of ideas is closed");
		      	updateStatusSession(false);
		      	updateStatusVotation(true);
		      	$(".themes-box").after('<a onclick="selectedIdeas(\'voteideias\', 0)" id="btn_votes" class="btn btn-white" alt="Vote selected ideas" title="Vote selected ideas" href="#"><i class="glyphicon glyphicon-inbox"></i></a>');
		      	countdownVotation();
		      }
		    },
		    countdown.DAYS|countdown.HOURS|countdown.MINUTES|countdown.SECONDS);
	} else if ((new Date() > dateFinish) && (new Date() < dateFinishVotation)){
		countdownVotation();
	}
</script>


